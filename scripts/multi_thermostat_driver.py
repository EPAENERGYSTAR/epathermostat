from pathlib import Path
import logging
import logging.config
import json
import csv
from datetime import date
from multi_thermostat_driver_func import mult_thermostat_driver
# These are variables used in the example code. Please tailor these to your
# environment as needed.

# Whether to compute Advanced Statistics (in most cases this is NOT needed)
ADVANCED_STATS = False

# The name of the product to be certified
PRODUCT_ID = 'test_product'

# The date of the run (defaults to today's date in YYYY-MM-DD format)
RUN_DATE = date.today().strftime('%F')

# This creates the base filename for the files that are created (e.g.
# test_product_2022-03-28)
BASE_FILENAME = f'{PRODUCT_ID}_{RUN_DATE}'

# Verbose will override logging to display the imported thermostats. Set to
# 'False' to use the logging level instead
VERBOSE = True

# Set to True to log additional warning messages, False to only display on
# console
CAPTURE_WARNINGS = True

# Example logging configuration for file and console output
# logging.json: Normal logging example
# logging_noisy.json: Turns on all debugging information
# logging_quiet.json: Only logs error messages
LOGGING_CONFIG = 'logging.json'

# Save cached weather data files? (Default: False)
SAVE_CACHE = False
CACHE_PATH = None  # Replace with location to save the weather cache files (e.g. '/tmp/epathermosat')
TAU_SAVE_PATH = Path('/home/theurerjohn3/Documents/energystar/epa5/datadir/attempt1')

# This section finds the metadata files and data files for the thermostats.
# These point to examples of the various styles of files
# In most cases you will combine Single Stage, Two Stage, and Two Stage ERT
# data in the same file.

# Single Stage
DATA_DIR = Path('../../datadir/EPA_Tau')
METADATA_FILENAME = DATA_DIR / '2019_epa_tau.csv'

# Two Stage
# DATA_DIR = os.path.join('..', 'tests', 'data', 'two_stage')
# METADATA_FILENAME = os.path.join(DATA_DIR, 'epa_two_stage_metadata.csv')

# Two Stage ERT
# DATA_DIR = os.path.join('..', 'tests', 'data', 'two_stage_ert')
# METADATA_FILENAME = os.path.join(DATA_DIR, 'epa_two_stage_metadata.csv')

# Where to store the metrics file and import error log files. This will use
# the data directory. You may also use the current directory by setting
# OUTPUT_DIR = '.'
OUTPUT_DIR = DATA_DIR

# NOTE: The following parameters do not need to be changed. They are provided
# here as examples of the files that are generated by this script.

# These are the filenames for the output files.
METRICS_FILENAME = f'{BASE_FILENAME}_metrics.csv'
CERTIFICATION_FILENAME = f'{BASE_FILENAME}_certification.csv'
STATISTICS_FILENAME = f'{BASE_FILENAME}_stats.csv'
ADVANCED_STATISTICS_FILENAME = f'{BASE_FILENAME}_stats_advanced.csv'
IMPORT_ERRORS_FILENAME = f'{BASE_FILENAME}_import_errors.csv'
SANITIZED_IMPORT_ERRORS_FILENAME = f'{BASE_FILENAME}_errors_sanitized.csv'
CLIMATE_ZONE_INSUFFICIENT_FILENAME = f'{BASE_FILENAME}_climate_zone_insufficient.csv'
ZIP_FILENAME = f'{BASE_FILENAME}.zip'

# These are the locations of where these files will be stored.
METRICS_FILEPATH = OUTPUT_DIR / METRICS_FILENAME
STATS_FILEPATH = DATA_DIR / STATISTICS_FILENAME
CERTIFICATION_FILEPATH = DATA_DIR / CERTIFICATION_FILENAME
STATS_ADVANCED_FILEPATH = DATA_DIR / ADVANCED_STATISTICS_FILENAME
IMPORT_ERRORS_FILEPATH = OUTPUT_DIR / IMPORT_ERRORS_FILENAME
SANITIZED_IMPORT_ERRORS_FILEPATH = OUTPUT_DIR / SANITIZED_IMPORT_ERRORS_FILENAME
CLIMATE_ZONE_INSUFFICIENT_FILEPATH = OUTPUT_DIR / CLIMATE_ZONE_INSUFFICIENT_FILENAME
ZIP_FILEPATH = OUTPUT_DIR / ZIP_FILENAME


if __name__ == '__main__':
    mult_thermostat_driver(
        advanced_stats=ADVANCED_STATS,
        product_id=PRODUCT_ID,
        verbose=VERBOSE,
        capture_warnings=CAPTURE_WARNINGS,
        logging_config=LOGGING_CONFIG,
        save_cache=SAVE_CACHE,
        cache_path=CACHE_PATH,
        tau_save_path=TAU_SAVE_PATH,
        metadata_filename=METADATA_FILENAME,
        metrics_filepath=METRICS_FILEPATH,
        stats_filepath=STATS_FILEPATH,
        certification_filepath=CERTIFICATION_FILEPATH,
        stats_advanced_filepath=STATS_ADVANCED_FILEPATH,
        import_errors_filepath=IMPORT_ERRORS_FILEPATH,
        sanitized_import_errors_filepath=SANITIZED_IMPORT_ERRORS_FILEPATH,
        climate_zone_insufficient_filepath=CLIMATE_ZONE_INSUFFICIENT_FILEPATH,
        zip_filepath=ZIP_FILEPATH
    )
